##
## Copyright 2017-2021 the original author or authors.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
## either express or implied. See the License for the specific language
## governing permissions and limitations under the License.
##
##########################################################################################
##### Ready for generation.
##########################################################################################
#set ($remoteApiLogic = $scriptEngine.get('remoteApiLogic'))
#set ($rule = $scriptEngine.get('remoteApiRule'))
#set ($definitionMap = {})
#set ($definitionMap = $data.definitionMap)
##
##########################################################################################
##### Copyright & package & import.
##########################################################################################
${manager.allClassCopyright}package ${data.package};

#set ($importList = [])
#set($added = $importList.add('org.lastaflute.core.util.Lato'))
#set ($tempDefinitionMap = {})
#set ($put = $tempDefinitionMap.putAll($definitionMap))
#set ($dummy = $scriptEngine.invokeMethod($remoteApiLogic, 'deriveBeanImportList', $rule, $data, $data.properties, $importList, $tempDefinitionMap))
#set ($categolizedImportClassList = $scriptEngine.invokeMethod($remoteApiLogic, 'deriveCategolizedImportClassList', $importList, $data.package, $scriptEngine.invokeMethod($rule, 'importOrderList')))
#foreach($categolizedImportClass in $categolizedImportClassList)
#foreach($importClass in $categolizedImportClass)
import ${importClass};
#end

#end
##########################################################################################
##### Class definition.
##########################################################################################
/**
 * The bean class as ${data.beanPurposeType} for remote API of ${data.remoteApiExp}.
 * @author FreeGen
 */
public class ${data.className}#if ($data.extendsClass && $data.extendsClass != '') extends $data.extendsClass#end#if ($data.implementsClasses && $data.implementsClasses != '') implements $data.implementsClasses#end {
##########################################################################################
##### Property definition.
##########################################################################################
#set($nestTypeFullNameList = [])
#foreach($propertyEntry in $data.properties.entrySet())
#set($property = $scriptEngine.invokeMethod($remoteApiLogic, 'deriveBeanProperty', $rule, $data, $data.className, $propertyEntry, $nestTypeFullNameList, []))
#generateBeanProperty($property, 0)
#end

    @Override
    public String toString() {
        return Lato.string(this);
    }
}
## _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_//_/_/_/_/_/_/
## generate bean property.
## @param property generate bean property information. (NotNull)
## @param indentSize indent size. (NotNull)
## _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_//_/_/_/_/_/_/
#macro(generateBeanProperty, $property, $indentSize)

#set($indent = $scriptEngine.invokeMethod($remoteApiLogic, 'indent', $indentSize))
${indent}${property.javadocComment}
#foreach($annotation in $property.annotationList)
${indent}${annotation}
#end
${indent}public ${property.fieldClass} ${property.fieldName};
#if ($property.nestType)

${indent}/**
${indent} * The part class of ${property.nestType.nestType}.
${indent} * @author FreeGen
${indent} */
${indent}public static class ${property.nestType.nestType} {
#foreach($nestProperty in $property.nestType.propertyList)
#set ($indentSizeNest = $indentSize + 1)
#generateBeanProperty($nestProperty, $indentSizeNest)
#set ($indentSizeNest = $indentSize - 1)
#end
#set($indent = $scriptEngine.invokeMethod($remoteApiLogic, 'indent', $indentSize))
${indent}}
#end
#end
